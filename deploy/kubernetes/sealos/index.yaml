# This is a Sealos Template CRD (Custom Resource Definition) for deploying the Refly application.
# It is designed to create a new application in the Sealos App Store.
# For detailed guidance on creating and customizing templates, refer to this guide: https://sealos.run/docs/guides/app-store
apiVersion: app.sealos.io/v1
kind: Template
metadata: 
  name: ${{ defaults.app_name }}

spec:
  # The title of the application as it will appear in the Sealos marketplace or template listing.
  title: 'Refly'                         
  # The official website URL of the application for further information or reference.
  url: 'https://refly.ai/'                         
  # The GitHub repository URL where the source code of the application is hosted.
  gitRepo: 'https://github.com/refly-ai/refly'        
  # The name of the author or organization responsible for creating and maintaining the application.
  author: 'refly-ai'                                     
  # A detailed description of the application, explaining its purpose and features.
  description: 'Refly is an open-source AI-native creation engine. Its intuitive free-form canvas interface combines multi-threaded dialogues, artifacts, AI knowledge base integration, chrome extension clip & save, contextual memory, intelligent search, WYSIWYG AI editor and more, empowering you to effortlessly transform ideas into production-ready content.'    
  # A link to the README file for the application, providing detailed documentation or setup instructions.
  readme: 'https://raw.githubusercontent.com/refly-ai/refly/main/README.md'
  # The URL to the icon or logo image of the application, used for visual representation in the Sealos UI.
  icon: 'https://refly.ai/assets/logo-SZ4Jju-5.svg'
  # Specifies that this is an inline template, meaning all YAML configurations are contained within a single file.
  templateType: inline
  defaults:
    app_name:
      # Defines the type of the variable as a string, which will be rendered with quotes.
      type: string
      # A default value for the application name, uniquely generated using a random 8-character suffix to avoid naming conflicts.
      value: refly-${{ random(8) }}
    app_host:
      # Defines the type of the variable as a string for the application host.
      type: string
      # A default value for the application host, generated as a random 8-character string.
      value: ${{ random(8) }}
  inputs:
    OPENAI_API_KEY:
      # A description of the input field, explaining that it is for the user's OpenAI API key.
      description: 'OpenAI API Key'
      # Specifies the input type as a string.
      type: string
      # Sets an empty string as the default value for the API key.
      default: ''
      # Marks this input as mandatory, meaning the user must provide a value for deployment.
      required: true
    OPENAI_BASE_URL:
      # A description of the input field, indicating it is for the base URL of the OpenAI API endpoint.
      description: 'OpenAI endpoint base URL'
      # Specifies the input type as a string.
      type: string
      # Provides a default value for the base URL, pointing to the standard OpenAI API endpoint.
      default: 'https://api.openai.com/v1'
      # Marks this input as optional, allowing deployment without a custom value.
      required: false
---
# Below is the Kubernetes template for the deployment of the application.
# They are generated by `kompose` and customize to fit the needs of Sealos.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-api
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-api
    spec:
      containers:
        - args:
            - sh
            - -c
            - node scripts/sync-db-schema.js && node main.js
          env:
            - name: AUTH_SKIP_VERIFICATION
              valueFrom:
                configMapKeyRef:
                  key: AUTH_SKIP_VERIFICATION
                  name: ${{ defaults.app_name }}-env
            - name: COLLAB_TOKEN_EXPIRY
              valueFrom:
                configMapKeyRef:
                  key: COLLAB_TOKEN_EXPIRY
                  name: ${{ defaults.app_name }}-env
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_URL
                  name: ${{ defaults.app_name }}-env
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: ELASTICSEARCH_PASSWORD
                  name: ${{ defaults.app_name }}-env
            - name: ELASTICSEARCH_URL
              valueFrom:
                configMapKeyRef:
                  key: ELASTICSEARCH_URL
                  name: ${{ defaults.app_name }}-env
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: ELASTICSEARCH_USERNAME
                  name: ${{ defaults.app_name }}-env
            - name: EMAIL_AUTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: EMAIL_AUTH_ENABLED
                  name: ${{ defaults.app_name }}-env
            - name: EMAIL_SENDER
              valueFrom:
                configMapKeyRef:
                  key: EMAIL_SENDER
                  name: ${{ defaults.app_name }}-env
            - name: EMBEDDINGS_BATCH_SIZE
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDINGS_BATCH_SIZE
                  name: ${{ defaults.app_name }}-env
            - name: EMBEDDINGS_DIMENSIONS
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDINGS_DIMENSIONS
                  name: ${{ defaults.app_name }}-env
            - name: EMBEDDINGS_MODEL_NAME
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDINGS_MODEL_NAME
                  name: ${{ defaults.app_name }}-env
            - name: EMBEDDINGS_PROVIDER
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDINGS_PROVIDER
                  name: ${{ defaults.app_name }}-env
            - name: FIREWORKS_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: FIREWORKS_API_KEY
                  name: ${{ defaults.app_name }}-env
            - name: GITHUB_AUTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: GITHUB_AUTH_ENABLED
                  name: ${{ defaults.app_name }}-env
            - name: GITHUB_CALLBACK_URL
              valueFrom:
                configMapKeyRef:
                  key: GITHUB_CALLBACK_URL
                  name: ${{ defaults.app_name }}-env
            - name: GITHUB_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: GITHUB_CLIENT_ID
                  name: ${{ defaults.app_name }}-env
            - name: GITHUB_CLIENT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: GITHUB_CLIENT_SECRET
                  name: ${{ defaults.app_name }}-env
            - name: GOOGLE_AUTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: GOOGLE_AUTH_ENABLED
                  name: ${{ defaults.app_name }}-env
            - name: GOOGLE_CALLBACK_URL
              valueFrom:
                configMapKeyRef:
                  key: GOOGLE_CALLBACK_URL
                  name: ${{ defaults.app_name }}-env
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: GOOGLE_CLIENT_ID
                  name: ${{ defaults.app_name }}-env
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: GOOGLE_CLIENT_SECRET
                  name: ${{ defaults.app_name }}-env
            - name: JINA_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: JINA_API_KEY
                  name: ${{ defaults.app_name }}-env
            - name: JWT_EXPIRATION_TIME
              valueFrom:
                configMapKeyRef:
                  key: JWT_EXPIRATION_TIME
                  name: ${{ defaults.app_name }}-env
            - name: JWT_REFRESH_EXPIRATION_TIME
              valueFrom:
                configMapKeyRef:
                  key: JWT_REFRESH_EXPIRATION_TIME
                  name: ${{ defaults.app_name }}-env
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: ${{ defaults.app_name }}-env
            - name: LOGIN_REDIRECT_URL
              valueFrom:
                configMapKeyRef:
                  key: LOGIN_REDIRECT_URL
                  name: ${{ defaults.app_name }}-env
            - name: MARKER_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: MARKER_API_KEY
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_EXTERNAL_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: MINIO_EXTERNAL_ACCESS_KEY
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_EXTERNAL_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: MINIO_EXTERNAL_BUCKET
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_EXTERNAL_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: MINIO_EXTERNAL_ENDPOINT
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_EXTERNAL_PORT
              valueFrom:
                configMapKeyRef:
                  key: MINIO_EXTERNAL_PORT
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_EXTERNAL_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: MINIO_EXTERNAL_SECRET_KEY
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_EXTERNAL_USE_SSL
              valueFrom:
                configMapKeyRef:
                  key: MINIO_EXTERNAL_USE_SSL
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_INTERNAL_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: MINIO_INTERNAL_ACCESS_KEY
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_INTERNAL_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: MINIO_INTERNAL_BUCKET
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_INTERNAL_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: MINIO_INTERNAL_ENDPOINT
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_INTERNAL_PORT
              valueFrom:
                configMapKeyRef:
                  key: MINIO_INTERNAL_PORT
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_INTERNAL_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: MINIO_INTERNAL_SECRET_KEY
                  name: ${{ defaults.app_name }}-env
            - name: MINIO_INTERNAL_USE_SSL
              valueFrom:
                configMapKeyRef:
                  key: MINIO_INTERNAL_USE_SSL
                  name: ${{ defaults.app_name }}-env
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  key: NODE_ENV
                  name: ${{ defaults.app_name }}-env
            - name: OPENAI_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_API_KEY
                  name: ${{ defaults.app_name }}-env
            - name: OPENAI_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_BASE_URL
                  name: ${{ defaults.app_name }}-env
            - name: OPENROUTER_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: OPENROUTER_API_KEY
                  name: ${{ defaults.app_name }}-env
            - name: ORIGIN
              valueFrom:
                configMapKeyRef:
                  key: ORIGIN
                  name: ${{ defaults.app_name }}-env
            - name: PARSER_PDF
              valueFrom:
                configMapKeyRef:
                  key: PARSER_PDF
                  name: ${{ defaults.app_name }}-env
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  key: PORT
                  name: ${{ defaults.app_name }}-env
            - name: QDRANT_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: QDRANT_API_KEY
                  name: ${{ defaults.app_name }}-env
            - name: QDRANT_HOST
              valueFrom:
                configMapKeyRef:
                  key: QDRANT_HOST
                  name: ${{ defaults.app_name }}-env
            - name: QDRANT_PORT
              valueFrom:
                configMapKeyRef:
                  key: QDRANT_PORT
                  name: ${{ defaults.app_name }}-env
            - name: QUOTA_FILE_PARSE_PAGE
              valueFrom:
                configMapKeyRef:
                  key: QUOTA_FILE_PARSE_PAGE
                  name: ${{ defaults.app_name }}-env
            - name: QUOTA_STORAGE_FILE
              valueFrom:
                configMapKeyRef:
                  key: QUOTA_STORAGE_FILE
                  name: ${{ defaults.app_name }}-env
            - name: QUOTA_STORAGE_OBJECT
              valueFrom:
                configMapKeyRef:
                  key: QUOTA_STORAGE_OBJECT
                  name: ${{ defaults.app_name }}-env
            - name: QUOTA_STORAGE_VECTOR
              valueFrom:
                configMapKeyRef:
                  key: QUOTA_STORAGE_VECTOR
                  name: ${{ defaults.app_name }}-env
            - name: QUOTA_T1_REQUEST
              valueFrom:
                configMapKeyRef:
                  key: QUOTA_T1_REQUEST
                  name: ${{ defaults.app_name }}-env
            - name: QUOTA_T1_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: QUOTA_T1_TOKEN
                  name: ${{ defaults.app_name }}-env
            - name: QUOTA_T2_REQUEST
              valueFrom:
                configMapKeyRef:
                  key: QUOTA_T2_REQUEST
                  name: ${{ defaults.app_name }}-env
            - name: QUOTA_T2_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: QUOTA_T2_TOKEN
                  name: ${{ defaults.app_name }}-env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: ${{ defaults.app_name }}-env
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PASSWORD
                  name: ${{ defaults.app_name }}-env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: ${{ defaults.app_name }}-env
            - name: REFLY_COOKIE_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: REFLY_COOKIE_DOMAIN
                  name: ${{ defaults.app_name }}-env
            - name: REFLY_COOKIE_SAME_SITE
              valueFrom:
                configMapKeyRef:
                  key: REFLY_COOKIE_SAME_SITE
                  name: ${{ defaults.app_name }}-env
            - name: REFLY_COOKIE_SECURE
              valueFrom:
                configMapKeyRef:
                  key: REFLY_COOKIE_SECURE
                  name: ${{ defaults.app_name }}-env
            - name: REFLY_VEC_DIM
              valueFrom:
                configMapKeyRef:
                  key: REFLY_VEC_DIM
                  name: ${{ defaults.app_name }}-env
            - name: RERANKER_MODEL
              valueFrom:
                configMapKeyRef:
                  key: RERANKER_MODEL
                  name: ${{ defaults.app_name }}-env
            - name: RERANKER_RELEVANCE_THRESHOLD
              valueFrom:
                configMapKeyRef:
                  key: RERANKER_RELEVANCE_THRESHOLD
                  name: ${{ defaults.app_name }}-env
            - name: RERANKER_TOP_N
              valueFrom:
                configMapKeyRef:
                  key: RERANKER_TOP_N
                  name: ${{ defaults.app_name }}-env
            - name: RESEND_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: RESEND_API_KEY
                  name: ${{ defaults.app_name }}-env
            - name: SERPER_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: SERPER_API_KEY
                  name: ${{ defaults.app_name }}-env
            - name: SKILL_EXECUTION_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: SKILL_EXECUTION_TIMEOUT
                  name: ${{ defaults.app_name }}-env
            - name: SKILL_IDLE_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: SKILL_IDLE_TIMEOUT
                  name: ${{ defaults.app_name }}-env
            - name: STATIC_PRIVATE_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: STATIC_PRIVATE_ENDPOINT
                  name: ${{ defaults.app_name }}-env
            - name: STATIC_PUBLIC_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: STATIC_PUBLIC_ENDPOINT
                  name: ${{ defaults.app_name }}-env
            - name: STRIPE_ACCOUNT_TEST_WEBHOOK_SECRET
              valueFrom:
                configMapKeyRef:
                  key: STRIPE_ACCOUNT_TEST_WEBHOOK_SECRET
                  name: ${{ defaults.app_name }}-env
            - name: STRIPE_ACCOUNT_WEBHOOK_SECRET
              valueFrom:
                configMapKeyRef:
                  key: STRIPE_ACCOUNT_WEBHOOK_SECRET
                  name: ${{ defaults.app_name }}-env
            - name: STRIPE_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: STRIPE_API_KEY
                  name: ${{ defaults.app_name }}-env
            - name: STRIPE_PORTAL_RETURN_URL
              valueFrom:
                configMapKeyRef:
                  key: STRIPE_PORTAL_RETURN_URL
                  name: ${{ defaults.app_name }}-env
            - name: STRIPE_SESSION_CANCEL_URL
              valueFrom:
                configMapKeyRef:
                  key: STRIPE_SESSION_CANCEL_URL
                  name: ${{ defaults.app_name }}-env
            - name: STRIPE_SESSION_SUCCESS_URL
              valueFrom:
                configMapKeyRef:
                  key: STRIPE_SESSION_SUCCESS_URL
                  name: ${{ defaults.app_name }}-env
            - name: WS_PORT
              valueFrom:
                configMapKeyRef:
                  key: WS_PORT
                  name: ${{ defaults.app_name }}-env
          image: reflyai/refly-api:nightly
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:5800
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 10
          name: refly-api
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "2048Mi"
          ports:
            - containerPort: 5800
              protocol: TCP
            - containerPort: 5801
              protocol: TCP
          workingDir: /app/apps/api/dist
      restartPolicy: Always

---
apiVersion: v1
kind: Service
# ALERT: The service name is intentionally set to "api" without the ${{ defaults.app_name }} prefix.
# This is required because in refly-web, the /api/ path is hardcoded in the nginx configuration
# to map to http://api:5800/. Changing this name would break the internal routing.
# NOTE: Using a generic service name like "api" may cause conflicts if you deploy another app
# with the same service name in the same Sealos workspace. Consider this limitation when deploying multiple apps.
metadata:
  name: api
spec:
  ports:
    - name: "5800"
      port: 5800
      targetPort: 5800
    - name: "5801"
      port: 5801
      targetPort: 5801
  selector:
    app: ${{ defaults.app_name }}-api

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${{ defaults.app_name }}-db-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-db
    spec:
      containers:
        # The following core configuration block is generated from the default values
        # of the Bitnami PostgreSQL Helm chart. It includes environment variables,
        # image, resource requests/limits, and health probes as recommended by Bitnami.
        - env:
            - name: POSTGRES_DB
              value: refly
            - name: POSTGRES_PASSWORD
              value: test
            - name: POSTGRES_USER
              value: refly
          image: docker.io/bitnami/postgresql:17.4.0-debian-12-r15
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "2048Mi"
          livenessProbe:
            # Standard liveness probe from Bitnami PostgreSQL Helm chart defaults
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "refly" -d "dbname=refly" -h 127.0.0.1 -p 5432
          readinessProbe:
            # Standard readiness probe from Bitnami PostgreSQL Helm chart defaults
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "refly" -d "dbname=refly" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          name: refly-db
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: ${{ defaults.app_name }}-db-data

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-db
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    app: ${{ defaults.app_name }}-db

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${{ defaults.app_name }}-elasticsearch-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-elasticsearch
    spec:
      containers:
        - env:
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: "false"
          image: reflyai/elasticsearch:7.10.2
          livenessProbe:
            exec:
              command:
                - curl -s http://localhost:9200 >/dev/null || exit 1
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 10
          name: refly-elasticsearch
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "2048Mi"
          ports:
            - containerPort: 9200
              protocol: TCP
          # Note: The mountPath "/var/lib/elasticsearch/data" is used for data persistence in this Kubernetes deployment.
          # This path is different from the default data path used in Docker-based Elasticsearch containers (which is usually "/usr/share/elasticsearch/data").
          volumeMounts:
            - mountPath: /var/lib/elasticsearch/data
              name: elasticsearch-data
      restartPolicy: Always
      volumes:
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: ${{ defaults.app_name }}-elasticsearch-data

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-elasticsearch
spec:
  ports:
    - name: "9200"
      port: 9200
      targetPort: 9200
  selector:
    app: ${{ defaults.app_name }}-elasticsearch

---
apiVersion: v1
data:
  # The following URLs and endpoints are mandatory in this k8s config for refly-api to connect all depending db services.
  # These values are critical for proper service wiring and must not be omitted or misconfigured.
  # Note: inputs value could be further extended per future one-click deploy requirements.
  AUTH_SKIP_VERIFICATION: "true"
  COLLAB_TOKEN_EXPIRY: ""
  # PostgreSQL database connection string (required for refly-api)
  DATABASE_URL: postgresql://refly:test@${{ defaults.app_name }}-db:5432/refly?schema=refly
  ELASTICSEARCH_PASSWORD: ""
  # Elasticsearch endpoint (required for refly-api)
  ELASTICSEARCH_URL: http://${{ defaults.app_name }}-elasticsearch:9200
  ELASTICSEARCH_USERNAME: ""
  EMAIL_AUTH_ENABLED: "true"
  EMAIL_SENDER: ""
  EMBEDDINGS_BATCH_SIZE: "512"
  EMBEDDINGS_DIMENSIONS: "768"
  EMBEDDINGS_MODEL_NAME: nomic-embed-text
  EMBEDDINGS_PROVIDER: openai
  FIREWORKS_API_KEY: ""
  GITHUB_AUTH_ENABLED: "false"
  GITHUB_CALLBACK_URL: ""
  GITHUB_CLIENT_ID: ""
  GITHUB_CLIENT_SECRET: ""
  GOOGLE_AUTH_ENABLED: "false"
  GOOGLE_CALLBACK_URL: ""
  GOOGLE_CLIENT_ID: ""
  GOOGLE_CLIENT_SECRET: ""
  JINA_API_KEY: ""
  JWT_EXPIRATION_TIME: ""
  JWT_REFRESH_EXPIRATION_TIME: ""
  JWT_SECRET: ""
  LOGIN_REDIRECT_URL: ""
  MARKER_API_KEY: ""
  MINIO_EXTERNAL_ACCESS_KEY: ""
  MINIO_EXTERNAL_BUCKET: ""
  # MinIO external endpoint (required for refly-api)
  MINIO_EXTERNAL_ENDPOINT: "${{ defaults.app_name }}-minio"
  MINIO_EXTERNAL_PORT: ""
  MINIO_EXTERNAL_SECRET_KEY: ""
  MINIO_EXTERNAL_USE_SSL: ""
  MINIO_INTERNAL_ACCESS_KEY: ""
  MINIO_INTERNAL_BUCKET: ""
  # MinIO internal endpoint (required for refly-api)
  MINIO_INTERNAL_ENDPOINT: "${{ defaults.app_name }}-minio"
  MINIO_INTERNAL_PORT: ""
  MINIO_INTERNAL_SECRET_KEY: ""
  MINIO_INTERNAL_USE_SSL: ""
  NODE_ENV: development
  # OpenAI API key and endpoint (can be extended for future one-click deploy requirements)
  OPENAI_API_KEY: "${{ inputs.OPENAI_API_KEY }}"
  OPENAI_BASE_URL: "${{ inputs.OPENAI_BASE_URL }}"
  OPENROUTER_API_KEY: ""
  ORIGIN: http://localhost:5700
  PARSER_PDF: pdfjs
  PORT: "5800"
  QDRANT_API_KEY: ""
  # Qdrant vector db host (required for refly-api)
  QDRANT_HOST: "${{ defaults.app_name }}-qdrant"
  QDRANT_PORT: ""
  QUOTA_FILE_PARSE_PAGE: "-1"
  QUOTA_STORAGE_FILE: "-1"
  QUOTA_STORAGE_OBJECT: "-1"
  QUOTA_STORAGE_VECTOR: "-1"
  QUOTA_T1_REQUEST: "-1"
  QUOTA_T1_TOKEN: "-1"
  QUOTA_T2_REQUEST: "-1"
  QUOTA_T2_TOKEN: "-1"
  # Redis host (required for refly-api)
  REDIS_HOST: "${{ defaults.app_name }}-redis"
  REDIS_PASSWORD: ""
  REDIS_PORT: ""
  REFLY_COOKIE_DOMAIN: ""
  REFLY_COOKIE_SAME_SITE: ""
  REFLY_COOKIE_SECURE: ""
  REFLY_VEC_DIM: "768"
  RERANKER_MODEL: jina-reranker-v2-base-multilingual
  RERANKER_RELEVANCE_THRESHOLD: "0.5"
  RERANKER_TOP_N: "10"
  RESEND_API_KEY: re_123
  SERPER_API_KEY: ""
  SKILL_EXECUTION_TIMEOUT: "180000"
  SKILL_IDLE_TIMEOUT: "60000"
  STATIC_PRIVATE_ENDPOINT: ""
  STATIC_PUBLIC_ENDPOINT: ""
  STRIPE_ACCOUNT_TEST_WEBHOOK_SECRET: test
  STRIPE_ACCOUNT_WEBHOOK_SECRET: test
  STRIPE_API_KEY: ""
  STRIPE_PORTAL_RETURN_URL: ""
  STRIPE_SESSION_CANCEL_URL: ""
  STRIPE_SESSION_SUCCESS_URL: ""
  WS_PORT: "5801"
kind: ConfigMap
metadata:
  name: ${{ defaults.app_name }}-env

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${{ defaults.app_name }}-minio-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-minio
    spec:
      containers:
        - args:
            - server
            - /data
            - --console-address
            - :9001
          env:
            - name: MINIO_ROOT_PASSWORD
              value: minioadmin
            - name: MINIO_ROOT_USER
              value: minioadmin
          image: minio/minio:RELEASE.2025-01-20T14-49-07Z
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:9000/minio/health/live
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
          name: refly-minio
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "2048Mi"
          ports:
            - containerPort: 9000
              protocol: TCP
            - containerPort: 9001
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: minio-data
      restartPolicy: Always
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: ${{ defaults.app_name }}-minio-data

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-minio
spec:
  ports:
    - name: "9000"
      port: 9000
      targetPort: 9000
    - name: "9001"
      port: 9001
      targetPort: 9001
  selector:
    app: ${{ defaults.app_name }}-minio

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${{ defaults.app_name }}-qdrant-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-qdrant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-qdrant
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-qdrant
    spec:
      containers:
        - image: reflyai/qdrant:v1.13.1
          livenessProbe:
            exec:
              command:
                - curl -s http://localhost:6333/healthz | grep -q 'healthz check passed' || exit 1
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
          name: refly-qdrant
          ports:
            - containerPort: 6333
              protocol: TCP
            - containerPort: 6334
              protocol: TCP
          volumeMounts:
            - mountPath: /qdrant/storage
              name: qdrant-data
      restartPolicy: Always
      volumes:
        - name: qdrant-data
          persistentVolumeClaim:
            claimName: ${{ defaults.app_name }}-qdrant-data

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-qdrant
spec:
  ports:
    - name: "6333"
      port: 6333
      targetPort: 6333
    - name: "6334"
      port: 6334
      targetPort: 6334
  selector:
    app: ${{ defaults.app_name }}-qdrant

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${{ defaults.app_name }}-redis-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-redis
    spec:
      containers:
        - image: redis/redis-stack:latest
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "2048Mi"
          name: refly-redis
          ports:
            - containerPort: 6379
              protocol: TCP
            - containerPort: 8001
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: redis-data
      restartPolicy: Always
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: ${{ defaults.app_name }}-redis-data

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    - name: "8001"
      port: 8001
      targetPort: 8001
  selector:
    app: ${{ defaults.app_name }}-redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-web
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-web
    spec:
      containers:
        - env:
            - name: API_URL
              value: /api
            - name: COLLAB_URL
              value: /collab
            - name: STATIC_PRIVATE_ENDPOINT
              value: /api/v1/misc
            - name: STATIC_PUBLIC_ENDPOINT
              value: /api/v1/misc/public
          image: reflyai/refly-web:nightly
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "2048Mi"
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:80
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 10
          name: refly-web
          ports:
            - containerPort: 80
              protocol: TCP
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-web
spec:
  ports:
    - name: "5700"
      port: 5700
      targetPort: 80
  selector:
    app: ${{ defaults.app_name }}-web
